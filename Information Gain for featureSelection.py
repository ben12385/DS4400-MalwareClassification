from sklearn.feature_selection import mutual_info_classif
from sklearn.preprocessing import StandardScaler


generalFeatureLocation = "D:\\Malware\\"

#Load data into system
featuresToAdd = list()
with open(generalFeatureLocation+"notEmptyFeatures", "r") as reader:
	for line in reader:
		featuresToAdd.append(int(line))
print("Loaded feature list")

trainX = list()
trainY = list()
count = 0
with open(generalFeatureLocation+"trainFeatures", "r") as reader:
	for line in reader:
		if count%1000 == 999:
			print(count)

		count += 1
		splittedData = line.split(",")

		toAdd = list()
		for feature in featuresToAdd:
			toAdd.append(int(splittedData[feature]))
		trainX.append(toAdd)
		trainY.append(int(splittedData[-1]))

scaler = StandardScaler()
trainX = scaler.fit_transform(trainX)
print("Loaded all training set")


infoGain = mutual_info_classif(trainX, trainY, discrete_features=True)

with open(generalFeatureLocation+"informationGain.csv", "w") as writer:
	writer.write("Huh \n")
	for toWrite in infoGain:
		writer.write(str(toWrite) + "\n")
