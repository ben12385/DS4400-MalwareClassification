from sklearn.linear_model import LogisticRegression
from sklearn import metrics
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestClassifier
from numpy as np


generalFeatureLocation = "F:\\Malware\\"
infoGainLocation = "C:\\Users\\Ben\\Documents\\GitHub\\DS4400-MalwareClassification\\"

#Load data into system
allX = list()
trainY = list()

count = 0
with open(generalFeatureLocation+"trainFeatures", "r") as reader:
	for line in reader:
		if count%1000 == 999:
			print(count)
			break
		count += 1
		
		splittedData = line.split(",")
		allX.append(splittedData)
		trainY.append(int(splittedData[-1]))

allX = np.array(allX)
print("Loaded all training set")		


featuresToAdd = list()
with open(infoGainLocation+"informationGainAbove0.1", "r") as reader:
	for line in reader:
		featuresToAdd.append(int(line))
print("Loaded feature list")			

trainX = np.array(list())
for feature in featuresToAdd:
	trainX = np.append(trainX, allX[:,int(feature)],1)
print("Adjusted feature to 0.1 list")


ranForestClas = RandomForestClassifier()
ranForestClas.fit(trainX, trainY)			
y_pred = ranForestClas.predict(trainX)

accuracy = metrics.accuracy_score(trainY, y_pred)
f1Score = f1_score(trainY, y_pred, average="macro")
print("For information gain above 0.1")
print("Accuracy: ", accuracy)
print("F1 Score: ", f1Score)

