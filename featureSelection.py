import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn import metrics

generalFeatureLocation = "F:\\Malware\\"

#Load data into system
trainX = list()
trainY = list()
with open(generalFeatureLocation+"trainFeatures", "r") as reader:
	for line in reader:
		splittedData = line.split(",")
		#Check if first one is name??
		trainX.append(splittedData[1:-1])
		trainY.append(splittedData[-1])
trainX = np.array(trainX)
trainY = np.array(trainY)

featureLen = len(trainX[0])
featureList = list()
for a in range(0, featureLen):
	compareList = list()
	for featureSelected in range(0, featureLen):
		if featureSelected in featureList:
			compareList.append(-1)
		else:
			toTrainX = np.array(trainX[:,featureSelected])
			for toAdd in featurelist:				
				toTrainX = np.append(toTrainX, trainX[:,toAdd], axis=1)
			
			#Logistic Regression
			logReg = LogisticRegression(C=1e5, solver='lbfgs', multi_class='multinomial')
			logReg.fit(toTrainX, trainY)			
			y_pred = logReg.predict(toTrainX)
			
			f1 = f1_score(trainY, y_pred, average='macro')
			
			compareList.append(f1)
	
	featureToSelect = np.argmax(compareList)
	featureList.append(featureToSelect)
	print(featureList)
			
			