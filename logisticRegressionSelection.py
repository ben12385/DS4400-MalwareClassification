from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics

generalFeatureLocation = "F:\\Malware\\"

#Load data into system
featuresToAdd = list()
with open(generalFeatureLocation+"notEmptyFeatures", "r") as reader:
	for line in reader:
		featuresToAdd.append(int(line))
print("Loaded feature list")

trainX = list()
trainY = list()
count = 0
with open(generalFeatureLocation+"trainFeatures", "r") as reader:
	for line in reader:
		if count%1000 == 5:
			print(count)

		count += 1
		splittedData = line.split(",")

		toAdd = list()
		for feature in featuresToAdd:
			toAdd.append(int(splittedData[feature]))
		trainX.append(toAdd)
		trainY.append(int(splittedData[-1]))

		
print("Loaded all training set")

testX = list()
testY = list()
count = 0
with open(generalFeatureLocation+"testFeatures", "r") as reader:
	for line in reader:
		if count%500 == 5:
			print(count)

		count += 1
		splittedData = line.split(",")

		toAdd = list()
		for feature in featuresToAdd:
			toAdd.append(int(splittedData[feature]))
		testX.append(toAdd)
		testY.append(int(splittedData[-1]))

		
print("Loaded all test set")


logreg = LogisticRegression(C=1, max_iter=100, solver='newton-cg', multi_class='multinomial', n_jobs=-1)
#logreg = RandomForestClassifier(n_estimators = 20, n_jobs=-1)
logreg.fit(trainX, trainY)
y_pred = logreg.predict(testX)
print(y_pred)
accuracy = metrics.accuracy_score(testY, y_pred)
print(accuracy)